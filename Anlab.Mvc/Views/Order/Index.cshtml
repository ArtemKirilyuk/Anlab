@using Anlab.Core.Models
@using AnlabMvc.Models.Order
@model IList<Order>

@{
    ViewData["Title"] = "Orders";
}
<div class="col">
    @if (Model.Any(o => o.Status == OrderStatusCodes.Created))
    {
    <div class="alert alert-warning" role="alert">
        You have orders that have not been confirmed.
    </div>
    }

    @if (Model.Any(o => o.Status == OrderStatusCodes.Finalized && !o.Paid))
    {
        <div class="alert alert-danger" role="alert">
            You have orders that have not been paid.
        </div>
    }

    <p>
        <a asp-action="Create" class="btn btn-default">Create Order</a>
    </p>

    <table border="0" cellspacing="5" cellpadding="5" align="left">
        <tbody>
        <tr>
            <td><label>Minimum Date:</label></td>
            <td><label>Maximum Date:</label></td>
            <td><label>Status:</label></td>
        </tr>
        <tr>
            <td><input name="min" id="min" type="text" data-date-orientation="bottom" data-date-clear-btn="true" data-date-today-highlight="true"></td>
            <td><input name="max" id="max" type="text" data-date-orientation="bottom" data-date-clear-btn="true" data-date-today-highlight="true"></td>
            <td>
                <select name="status" id="status">
                    <option value="All">Show All</option>
                    @foreach (var status in OrderStatusCodes.All)
                    {
                        <option value="@status">@status</option>
                    }
                </select>
            </td>
        </tr>
        </tbody>
    </table>

    <table id="table" class="table">
        <thead>
        <tr>
            <th>Project</th>
            <th>Work Req #</th>
            <th>Status</th>
            <th>Paid</th>
            <th>Created</th>
            <th>Updated</th>
        </tr>
        </thead>
        <tbody>
        @foreach (var order in Model)
        {
            <tr>
                <td>@if (order.Status == OrderStatusCodes.Created)
                    {
                        <a asp-action="Confirmation" asp-route-id="@order.Id">@order.Project</a>
                    }
                    else if (order.Status == OrderStatusCodes.Complete || order.Status == OrderStatusCodes.Finalized)
                    {
                        <a asp-controller="Results" asp-action="Link" asp-route-id="@order.ShareIdentifier">@order.Project</a>
                    }
                    else if (order.Status == OrderStatusCodes.Confirmed)
                    {
                        <a asp-action="Confirmed" asp-route-id="@order.Id">@order.Project</a>
                    }
                    else
                    {
                        <a asp-action="Details" asp-route-id="@order.Id">@order.Project</a>
                    }
                </td>
                <td>@order.RequestNum</td>
                <td>@order.Status</td>
                <td style="text-align: center">
                    @if (order.Paid)
                    {
                        <i class="fa fa-check" aria-hidden="true"></i>

                    }
                </td>
                <td>@order.Created.ToPacificTime().ToString("g")</td>
                <td>@order.Updated.ToPacificTime().ToString("g")</td>

            </tr>
        }
        </tbody>
    </table>
</div>


@section AdditionalStyles
{
    @{ await Html.RenderPartialAsync("_DataTableStylePartial"); }
    <link rel="stylesheet" type="text/css" href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datepicker/1.7.1/css/bootstrap-datepicker.min.css" />

    <style>
        #max, #min, #status {
            margin: 0 5px 5px 0;
            height: 30px;
        }
    </style>

}

@section Scripts
{
    @{ await Html.RenderPartialAsync("_DataTableScriptsPartial"); }
    <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datepicker/1.7.1/js/bootstrap-datepicker.min.js"></script>

    <script type="text/javascript">
         $(function () {
             var table = $("#table").DataTable({
                 "sorting": [[5, "desc"]],
                 "columnDefs": [
                     {
                         "type": "date", "targets": [4, 5]
                     }
                 ],
                 "stateSave": true,
                 "stateDuration": 60 * 10,
                 "createdRow": function (row, data, index) {
                     if (data[2] == "Created")
                     {
                         $(row).addClass('warning');
                     }
                     if (data[2] == "Finalized" && !data[3])
                     {
                         $(row).addClass('danger');
                     }
                 }
             });


             $("#min").datepicker({ onSelect: function () { table.draw(); }, changeMonth: true, changeYear: true });
             $("#max").datepicker({ onSelect: function () { table.draw(); }, changeMonth: true, changeYear: true });

             //Event listener to the two range filtering inputs to redraw on input
             $('#min, #max, #status').change(function () {
                 table.draw();
             });
         });

         $.fn.dataTable.ext.search.push(
             function (settings, data, dataIndex) {
                 var min = $('#min').datepicker("getDate");
                 var max = $('#max').datepicker("getDate");
                 var startDate = new Date(data[5]);
                 startDate.setHours(0, 0, 0, 0);

                 var status = data[2];
                 var statusFilter = $('#status').val();

                 if (statusFilter == "All" || status == statusFilter) {
                     if (min == null && max == null) { return true; }
                     if (min == null && startDate <= max) { return true; }
                     if (max == null && startDate >= min) { return true; }
                     if (startDate <= max && startDate >= min) { return true; }
                 }
                 return false;
             }
         );

    </script>
}
